---
name: Lint Code Base

on: [pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # When getting Rust dependencies, retry on network error:
  CARGO_NET_RETRY: 10
  # Use the local .curlrc
  CURL_HOME: .

jobs:
  lint-rust:
    name: lint-rust
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust
        run: rustup show
      - name: Run Lint
        run: cargo clippy --verbose --tests --benches --workspace -- -D clippy::all
        env:
          RUST_BACKTRACE: 1

  lint-other-files:
    name: lint-other-files
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: super-linter/super-linter/slim@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  aggregate:
    name: lint:required
    if: ${{ always() }}
    needs: [lint-rust, lint-other-files]
    runs-on: ubuntu-latest
    steps:
      - name: check step result directly
        if: ${{ needs.lint-other-files.result != 'success' }}
        run: exit 1
      - name: check step result directly
        if: ${{ needs.lint-rust.result != 'success' }}
        run: exit 1
